using SimpleEntityFramework.Domain.Roles;
using SimpleEntityFramework.Domain.Roles.Templates;
using SimpleEntityFramework.Infrastracture;
using System;
using System.IO;

namespace SimpleEntityFramework.Domain.Objects.Templates
{
    public abstract class BaseTemplate : ITemplate
    {
        public static readonly string Profile = $"/* Generated by SimpleEntityFramework on {DateTime.Now:yyyy-MM-dd HH:mm:ss} */";

        public BaseTemplate(ISefBuilder builder)
        {
            Builder = builder;
        }

        public virtual ISefBuilder Builder { get; }

        public abstract string Namespace { get; }

        public virtual string FolderPath => string.IsNullOrWhiteSpace(Namespace) ? Builder.OutputFolder : Path.Combine(Builder.OutputFolder, Namespace);

        public abstract string FileName { get; }

        public virtual string FilePath => Path.Combine(FolderPath, FileName);

        public abstract string FileContent { get; }

        public virtual void Generate()
        {
            Logger.Info($"{Namespace} > {FileName} is generating...");
            if (!Directory.Exists(FolderPath))
            {
                Directory.CreateDirectory(FolderPath);
            }
            File.WriteAllText(FilePath, FileContent);
        }
    }
}
